$route
 number-of-space-dimensions=1 print=(iterative-solve=xall)
 use-atomic-units dimension-1=x kinetic-energy-type=packed
$end
          
$nonstd
80//16;
20//01;
$end

$title
time-propagation code
$end

$h0(x)
 number-of-grids=1 quadrature-type=legendre
 right-boundary-condition=0 add-potential do-not-diagonalize
$end

$h0(x,grid(1))
 number-of-regions=8  print=(space=xall)
 region-boundaries=(-40.0d0,-30.d0,-20.d0,-10.d0,0.d0,
                     10.d0,20.d0,30.d0,40.d0)
 number-of-points-per-region=(100,100,100,100,100,100,100,100)
$end

$v0(x)
 use-atomic-units potential=none
$end
 
$time
 automate number-of-time-regions=100 first-time=0.d0 time-interval=.005d0
 print=(prop=(xpointers,xpotential,xinitial-state,xnon-linear-potential,
              xh-on-initial-state))
$end

$ardat
 overlap-tolerance=1.e-10 convergence=1.e-12
 print=(arnoldi=xall) maximum-number-of-iterations=100
 maximum-number-of-vectors=100 number-of-trials=1
$end

$v0(t1)
 potential=none
$end

$initial-state
 driver=gaussian-pulse sigma=1.d0 beta=4.d0
$end

$vnlse
  v-space-time=none
$end

