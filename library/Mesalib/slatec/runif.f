*deck runif
      function runif (t, n)
c***begin prologue  runif
c***purpose  generate a uniformly distributed random number.
c***library   slatec (fnlib)
c***category  l6a21
c***type      single precision (runif-s)
c***keywords  fnlib, random number, special functions, uniform
c***author  fullerton, w., (lanl)
c***description
c
c this random number generator is portable among a wide variety of
c computers.  it generates a random number between 0.0 and 1.0 accord-
c ing to the algorithm presented by bays and durham (toms, 2, 59,
c 1976).  the motivation for using this scheme, which resembles the
c maclaren-marsaglia method, is to greatly increase the period of the
c random sequence.  if the period of the basic generator (rand) is p,
c then the expected mean period of the sequence generated by runif is
c given by   new mean p = sqrt (pi*factorial(n)/(8*p)),
c where factorial(n) must be much greater than p in this asymptotic
c formula.  generally, n should be around 32 if p=4.e6 as for rand.
c
c             input argument --
c n      abs(n) is the number of random numbers in an auxiliary table.
c        note though that abs(n)+1 is the number of items in array t.
c        if n is positive and differs from its value in the previous
c        invocation, then the table is initialized for the new value of
c        n.  if n is negative, abs(n) is the number of items in an
c        auxiliary table, but the tables are now assumed already to
c        be initialized.  this option enables the user to save the
c        table t at the end of a long computer run and to restart with
c        the same sequence.  normally, runif would be called at most
c        once with negative n.  subsequent invocations would have n
c        positive and of the correct magnitude.
c
c             input and output argument  --
c t      an array of abs(n)+1 random numbers from a previous invocation
c        of runif.  whenever n is positive and differs from the old
c        n, the table is initialized.  the first abs(n) numbers are the
c        table discussed in the reference, and the n+1 -st value is y.
c        this array may be saved in order to restart a sequence.
c
c             output value --
c runif  a random number between 0.0 and 1.0.
c
c***references  (none)
c***routines called  rand
c***revision history  (yymmdd)
c   770401  date written
c   890531  changed all specific intrinsics to generic.  (wrb)
c   890531  revision date from version 3.2
c   891214  prologue converted to version 4.0 format.  (bab)
c   910819  added external statement for rand due to problem on ibm
c           rs 6000.  (wrb)
c***end prologue  runif
      dimension t(*)
      external rand
      save nold, floatn
      data nold /-1/
c***first executable statement  runif
      if (n.eq.nold) go to 20
c
      nold = abs(n)
      floatn = nold
      if (n.lt.0) dummy = rand (t(nold+1))
      if (n.lt.0) go to 20
c
      do 10 i=1,nold
        t(i) = rand (0.)
 10   continue
      t(nold+1) = rand (0.)
c
 20   j = t(nold+1)*floatn + 1.
      t(nold+1) = t(j)
      runif = t(j)
      t(j) = rand (0.)
c
      return
      end
