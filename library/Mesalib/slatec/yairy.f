*deck yairy
      subroutine yairy (x, rx, c, bi, dbi)
c***begin prologue  yairy
c***subsidiary
c***purpose  subsidiary to besj and besy
c***library   slatec
c***type      single precision (yairy-s, dyairy-d)
c***author  amos, d. e., (snla)
c           daniel, s. l., (snla)
c***description
c
c                  yairy computes the airy function bi(x)
c                   and its derivative dbi(x) for asyjy
c
c                                     input
c
c         x  - argument, computed by asyjy, x unrestricted
c        rx  - rx=sqrt(abs(x)), computed by asyjy
c         c  - c=2.*(abs(x)**1.5)/3., computed by asyjy
c
c                                    output
c        bi  - value of function bi(x)
c       dbi  - value of the derivative dbi(x)
c
c***see also  besj, besy
c***routines called  (none)
c***revision history  (yymmdd)
c   750101  date written
c   891214  prologue converted to version 4.0 format.  (bab)
c   900328  added type section.  (wrb)
c   910408  updated the author section.  (wrb)
c***end prologue  yairy
c
      integer i, j, m1, m1d, m2, m2d, m3, m3d, m4d, n1, n1d, n2, n2d,
     1 n3, n3d, n4d
      real aa, ax, bb, bi, bjn, bjp, bk1, bk2, bk3, bk4, c, con1, con2,
     1 con3, cv, daa, dbb, dbi, dbjn, dbjp, dbk1, dbk2, dbk3, dbk4, d1,
     2 d2, ex, e1, e2, fpi12, f1, f2, rtrx, rx, spi12, s1, s2, t, tc,
     3 temp1, temp2, tt, x
      dimension bk1(20), bk2(20), bk3(20), bk4(14)
      dimension bjp(19), bjn(19), aa(14), bb(14)
      dimension dbk1(21), dbk2(20), dbk3(20), dbk4(14)
      dimension dbjp(19), dbjn(19), daa(14), dbb(14)
      save n1, n2, n3, m1, m2, m3, n1d, n2d, n3d, n4d,
     1 m1d, m2d, m3d, m4d, fpi12, spi12, con1, con2, con3,
     2 bk1, bk2, bk3, bk4, bjp, bjn, aa, bb, dbk1, dbk2, dbk3, dbk4,
     3 dbjp, dbjn, daa, dbb
      data n1,n2,n3/20,19,14/
      data m1,m2,m3/18,17,12/
      data n1d,n2d,n3d,n4d/21,20,19,14/
      data m1d,m2d,m3d,m4d/19,18,17,12/
      data fpi12,spi12,con1,con2,con3/
     1 1.30899693899575e+00, 1.83259571459405e+00, 6.66666666666667e-01,
     2 7.74148278841779e+00, 3.64766105490356e-01/
      data bk1(1),  bk1(2),  bk1(3),  bk1(4),  bk1(5),  bk1(6),
     1     bk1(7),  bk1(8),  bk1(9),  bk1(10), bk1(11), bk1(12),
     2     bk1(13), bk1(14), bk1(15), bk1(16), bk1(17), bk1(18),
     3     bk1(19), bk1(20)/ 2.43202846447449e+00, 2.57132009754685e+00,
     4 1.02802341258616e+00, 3.41958178205872e-01, 8.41978629889284e-02,
     5 1.93877282587962e-02, 3.92687837130335e-03, 6.83302689948043e-04,
     6 1.14611403991141e-04, 1.74195138337086e-05, 2.41223620956355e-06,
     7 3.24525591983273e-07, 4.03509798540183e-08, 4.70875059642296e-09,
     8 5.35367432585889e-10, 5.70606721846334e-11, 5.80526363709933e-12,
     9 5.76338988616388e-13, 5.42103834518071e-14, 4.91857330301677e-15/
      data bk2(1),  bk2(2),  bk2(3),  bk2(4),  bk2(5),  bk2(6),
     1     bk2(7),  bk2(8),  bk2(9),  bk2(10), bk2(11), bk2(12),
     2     bk2(13), bk2(14), bk2(15), bk2(16), bk2(17), bk2(18),
     3     bk2(19), bk2(20)/ 5.74830555784088e-01,-6.91648648376891e-03,
     4 1.97460263052093e-03,-5.24043043868823e-04, 1.22965147239661e-04,
     5-2.27059514462173e-05, 2.23575555008526e-06, 4.15174955023899e-07,
     6-2.84985752198231e-07, 8.50187174775435e-08,-1.70400826891326e-08,
     7 2.25479746746889e-09,-1.09524166577443e-10,-3.41063845099711e-11,
     8 1.11262893886662e-11,-1.75542944241734e-12, 1.36298600401767e-13,
     9 8.76342105755664e-15,-4.64063099157041e-15, 7.78772758732960e-16/
      data bk3(1),  bk3(2),  bk3(3),  bk3(4),  bk3(5),  bk3(6),
     1     bk3(7),  bk3(8),  bk3(9),  bk3(10), bk3(11), bk3(12),
     2     bk3(13), bk3(14), bk3(15), bk3(16), bk3(17), bk3(18),
     3     bk3(19), bk3(20)/ 5.66777053506912e-01, 2.63672828349579e-03,
     4 5.12303351473130e-05, 2.10229231564492e-06, 1.42217095113890e-07,
     5 1.28534295891264e-08, 7.28556219407507e-10,-3.45236157301011e-10,
     6-2.11919115912724e-10,-6.56803892922376e-11,-8.14873160315074e-12,
     7 3.03177845632183e-12, 1.73447220554115e-12, 1.67935548701554e-13,
     8-1.49622868806719e-13,-5.15470458953407e-14, 8.75741841857830e-15,
     9 7.96735553525720e-15,-1.29566137861742e-16,-1.11878794417520e-15/
      data bk4(1),  bk4(2),  bk4(3),  bk4(4),  bk4(5),  bk4(6),
     1     bk4(7),  bk4(8),  bk4(9),  bk4(10), bk4(11), bk4(12),
     2     bk4(13), bk4(14)/ 4.85444386705114e-01,-3.08525088408463e-03,
     3 6.98748404837928e-05,-2.82757234179768e-06, 1.59553313064138e-07,
     4-1.12980692144601e-08, 9.47671515498754e-10,-9.08301736026423e-11,
     5 9.70776206450724e-12,-1.13687527254574e-12, 1.43982917533415e-13,
     6-1.95211019558815e-14, 2.81056379909357e-15,-4.26916444775176e-16/
      data bjp(1),  bjp(2),  bjp(3),  bjp(4),  bjp(5),  bjp(6),
     1     bjp(7),  bjp(8),  bjp(9),  bjp(10), bjp(11), bjp(12),
     2     bjp(13), bjp(14), bjp(15), bjp(16), bjp(17), bjp(18),
     3     bjp(19)         / 1.34918611457638e-01,-3.19314588205813e-01,
     4 5.22061946276114e-02, 5.28869112170312e-02,-8.58100756077350e-03,
     5-2.99211002025555e-03, 4.21126741969759e-04, 8.73931830369273e-05,
     6-1.06749163477533e-05,-1.56575097259349e-06, 1.68051151983999e-07,
     7 1.89901103638691e-08,-1.81374004961922e-09,-1.66339134593739e-10,
     8 1.42956335780810e-11, 1.10179811626595e-12,-8.60187724192263e-14,
     9-5.71248177285064e-15, 4.08414552853803e-16/
      data bjn(1),  bjn(2),  bjn(3),  bjn(4),  bjn(5),  bjn(6),
     1     bjn(7),  bjn(8),  bjn(9),  bjn(10), bjn(11), bjn(12),
     2     bjn(13), bjn(14), bjn(15), bjn(16), bjn(17), bjn(18),
     3     bjn(19)         / 6.59041673525697e-02,-4.24905910566004e-01,
     4 2.87209745195830e-01, 1.29787771099606e-01,-4.56354317590358e-02,
     5-1.02630175982540e-02, 2.50704671521101e-03, 3.78127183743483e-04,
     6-7.11287583284084e-05,-8.08651210688923e-06, 1.23879531273285e-06,
     7 1.13096815867279e-07,-1.46234283176310e-08,-1.11576315688077e-09,
     8 1.24846618243897e-10, 8.18334132555274e-12,-8.07174877048484e-13,
     9-4.63778618766425e-14, 4.09043399081631e-15/
      data aa(1),   aa(2),   aa(3),   aa(4),   aa(5),   aa(6),
     1     aa(7),   aa(8),   aa(9),   aa(10),  aa(11),  aa(12),
     2     aa(13),  aa(14) /-2.78593552803079e-01, 3.52915691882584e-03,
     3 2.31149677384994e-05,-4.71317842263560e-06, 1.12415907931333e-07,
     4 2.00100301184339e-08,-2.60948075302193e-09, 3.55098136101216e-11,
     5 3.50849978423875e-11,-5.83007187954202e-12, 2.04644828753326e-13,
     6 1.10529179476742e-13,-2.87724778038775e-14, 2.88205111009939e-15/
      data bb(1),   bb(2),   bb(3),   bb(4),   bb(5),   bb(6),
     1     bb(7),   bb(8),   bb(9),   bb(10),  bb(11),  bb(12),
     2     bb(13),  bb(14) /-4.90275424742791e-01,-1.57647277946204e-03,
     3 9.66195963140306e-05,-1.35916080268815e-07,-2.98157342654859e-07,
     4 1.86824767559979e-08, 1.03685737667141e-09,-3.28660818434328e-10,
     5 2.57091410632780e-11, 2.32357655300677e-12,-9.57523279048255e-13,
     6 1.20340828049719e-13, 2.90907716770715e-15,-4.55656454580149e-15/
      data dbk1(1), dbk1(2), dbk1(3), dbk1(4), dbk1(5), dbk1(6),
     1     dbk1(7), dbk1(8), dbk1(9), dbk1(10),dbk1(11),dbk1(12),
     2     dbk1(13),dbk1(14),dbk1(15),dbk1(16),dbk1(17),dbk1(18),
     3     dbk1(19),dbk1(20),
     4     dbk1(21)        / 2.95926143981893e+00, 3.86774568440103e+00,
     5 1.80441072356289e+00, 5.78070764125328e-01, 1.63011468174708e-01,
     6 3.92044409961855e-02, 7.90964210433812e-03, 1.50640863167338e-03,
     7 2.56651976920042e-04, 3.93826605867715e-05, 5.81097771463818e-06,
     8 7.86881233754659e-07, 9.93272957325739e-08, 1.21424205575107e-08,
     9 1.38528332697707e-09, 1.50190067586758e-10, 1.58271945457594e-11,
     1 1.57531847699042e-12, 1.50774055398181e-13, 1.40594335806564e-14,
     2 1.24942698777218e-15/
      data dbk2(1), dbk2(2), dbk2(3), dbk2(4), dbk2(5), dbk2(6),
     1     dbk2(7), dbk2(8), dbk2(9), dbk2(10),dbk2(11),dbk2(12),
     2     dbk2(13),dbk2(14),dbk2(15),dbk2(16),dbk2(17),dbk2(18),
     3    dbk2(19),dbk2(20)/ 5.49756809432471e-01, 9.13556983276901e-03,
     4-2.53635048605507e-03, 6.60423795342054e-04,-1.55217243135416e-04,
     5 3.00090325448633e-05,-3.76454339467348e-06,-1.33291331611616e-07,
     6 2.42587371049013e-07,-8.07861075240228e-08, 1.71092818861193e-08,
     7-2.41087357570599e-09, 1.53910848162371e-10, 2.56465373190630e-11,
     8-9.88581911653212e-12, 1.60877986412631e-12,-1.20952524741739e-13,
     9-1.06978278410820e-14, 5.02478557067561e-15,-8.68986130935886e-16/
      data dbk3(1), dbk3(2), dbk3(3), dbk3(4), dbk3(5), dbk3(6),
     1     dbk3(7), dbk3(8), dbk3(9), dbk3(10),dbk3(11),dbk3(12),
     2     dbk3(13),dbk3(14),dbk3(15),dbk3(16),dbk3(17),dbk3(18),
     3    dbk3(19),dbk3(20)/ 5.60598509354302e-01,-3.64870013248135e-03,
     4-5.98147152307417e-05,-2.33611595253625e-06,-1.64571516521436e-07,
     5-2.06333012920569e-08,-4.27745431573110e-09,-1.08494137799276e-09,
     6-2.37207188872763e-10,-2.22132920864966e-11, 1.07238008032138e-11,
     7 5.71954845245808e-12, 7.51102737777835e-13,-3.81912369483793e-13,
     8-1.75870057119257e-13, 6.69641694419084e-15, 2.26866724792055e-14,
     9 2.69898141356743e-15,-2.67133612397359e-15,-6.54121403165269e-16/
      data dbk4(1), dbk4(2), dbk4(3), dbk4(4), dbk4(5), dbk4(6),
     1     dbk4(7), dbk4(8), dbk4(9), dbk4(10),dbk4(11),dbk4(12),
     2    dbk4(13),dbk4(14)/ 4.93072999188036e-01, 4.38335419803815e-03,
     3-8.37413882246205e-05, 3.20268810484632e-06,-1.75661979548270e-07,
     4 1.22269906524508e-08,-1.01381314366052e-09, 9.63639784237475e-11,
     5-1.02344993379648e-11, 1.19264576554355e-12,-1.50443899103287e-13,
     6 2.03299052379349e-14,-2.91890652008292e-15, 4.42322081975475e-16/
      data dbjp(1), dbjp(2), dbjp(3), dbjp(4), dbjp(5), dbjp(6),
     1     dbjp(7), dbjp(8), dbjp(9), dbjp(10),dbjp(11),dbjp(12),
     2     dbjp(13),dbjp(14),dbjp(15),dbjp(16),dbjp(17),dbjp(18),
     3     dbjp(19)        / 1.13140872390745e-01,-2.08301511416328e-01,
     4 1.69396341953138e-02, 2.90895212478621e-02,-3.41467131311549e-03,
     5-1.46455339197417e-03, 1.63313272898517e-04, 3.91145328922162e-05,
     6-3.96757190808119e-06,-6.51846913772395e-07, 5.98707495269280e-08,
     7 7.44108654536549e-09,-6.21241056522632e-10,-6.18768017313526e-11,
     8 4.72323484752324e-12, 3.91652459802532e-13,-2.74985937845226e-14,
     9-1.95036497762750e-15, 1.26669643809444e-16/
      data dbjn(1), dbjn(2), dbjn(3), dbjn(4), dbjn(5), dbjn(6),
     1     dbjn(7), dbjn(8), dbjn(9), dbjn(10),dbjn(11),dbjn(12),
     2     dbjn(13),dbjn(14),dbjn(15),dbjn(16),dbjn(17),dbjn(18),
     3     dbjn(19)        /-1.88091260068850e-02,-1.47798180826140e-01,
     4 5.46075900433171e-01, 1.52146932663116e-01,-9.58260412266886e-02,
     5-1.63102731696130e-02, 5.75364806680105e-03, 7.12145408252655e-04,
     6-1.75452116846724e-04,-1.71063171685128e-05, 3.24435580631680e-06,
     7 2.61190663932884e-07,-4.03026865912779e-08,-2.76435165853895e-09,
     8 3.59687929062312e-10, 2.14953308456051e-11,-2.41849311903901e-12,
     9-1.28068004920751e-13, 1.26939834401773e-14/
      data daa(1),  daa(2),  daa(3),  daa(4),  daa(5),  daa(6),
     1     daa(7),  daa(8),  daa(9),  daa(10), daa(11), daa(12),
     2     daa(13), daa(14)/ 2.77571356944231e-01,-4.44212833419920e-03,
     3 8.42328522190089e-05, 2.58040318418710e-06,-3.42389720217621e-07,
     4 6.24286894709776e-09, 2.36377836844577e-09,-3.16991042656673e-10,
     5 4.40995691658191e-12, 5.18674221093575e-12,-9.64874015137022e-13,
     6 4.90190576608710e-14, 1.77253430678112e-14,-5.55950610442662e-15/
      data dbb(1),  dbb(2),  dbb(3),  dbb(4),  dbb(5),  dbb(6),
     1     dbb(7),  dbb(8),  dbb(9),  dbb(10), dbb(11), dbb(12),
     2     dbb(13), dbb(14)/ 4.91627321104601e-01, 3.11164930427489e-03,
     3 8.23140762854081e-05,-4.61769776172142e-06,-6.13158880534626e-08,
     4 2.87295804656520e-08,-1.81959715372117e-09,-1.44752826642035e-10,
     5 4.53724043420422e-11,-3.99655065847223e-12,-3.24089119830323e-13,
     6 1.62098952568741e-13,-2.40765247974057e-14, 1.69384811284491e-16/
c***first executable statement  yairy
      ax = abs(x)
      rx = sqrt(ax)
      c = con1*ax*rx
      if (x.lt.0.0e0) go to 120
      if (c.gt.8.0e0) go to 60
      if (x.gt.2.5e0) go to 30
      t = (x+x-2.5e0)*0.4e0
      tt = t + t
      j = n1
      f1 = bk1(j)
      f2 = 0.0e0
      do 10 i=1,m1
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + bk1(j)
        f2 = temp1
   10 continue
      bi = t*f1 - f2 + bk1(1)
      j = n1d
      f1 = dbk1(j)
      f2 = 0.0e0
      do 20 i=1,m1d
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + dbk1(j)
        f2 = temp1
   20 continue
      dbi = t*f1 - f2 + dbk1(1)
      return
   30 continue
      rtrx = sqrt(rx)
      t = (x+x-con2)*con3
      tt = t + t
      j = n1
      f1 = bk2(j)
      f2 = 0.0e0
      do 40 i=1,m1
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + bk2(j)
        f2 = temp1
   40 continue
      bi = (t*f1-f2+bk2(1))/rtrx
      ex = exp(c)
      bi = bi*ex
      j = n2d
      f1 = dbk2(j)
      f2 = 0.0e0
      do 50 i=1,m2d
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + dbk2(j)
        f2 = temp1
   50 continue
      dbi = (t*f1-f2+dbk2(1))*rtrx
      dbi = dbi*ex
      return
c
   60 continue
      rtrx = sqrt(rx)
      t = 16.0e0/c - 1.0e0
      tt = t + t
      j = n1
      f1 = bk3(j)
      f2 = 0.0e0
      do 70 i=1,m1
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + bk3(j)
        f2 = temp1
   70 continue
      s1 = t*f1 - f2 + bk3(1)
      j = n2d
      f1 = dbk3(j)
      f2 = 0.0e0
      do 80 i=1,m2d
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + dbk3(j)
        f2 = temp1
   80 continue
      d1 = t*f1 - f2 + dbk3(1)
      tc = c + c
      ex = exp(c)
      if (tc.gt.35.0e0) go to 110
      t = 10.0e0/c - 1.0e0
      tt = t + t
      j = n3
      f1 = bk4(j)
      f2 = 0.0e0
      do 90 i=1,m3
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + bk4(j)
        f2 = temp1
   90 continue
      s2 = t*f1 - f2 + bk4(1)
      bi = (s1+exp(-tc)*s2)/rtrx
      bi = bi*ex
      j = n4d
      f1 = dbk4(j)
      f2 = 0.0e0
      do 100 i=1,m4d
        j = j - 1
        temp1 = f1
        f1 = tt*f1 - f2 + dbk4(j)
        f2 = temp1
  100 continue
      d2 = t*f1 - f2 + dbk4(1)
      dbi = rtrx*(d1+exp(-tc)*d2)
      dbi = dbi*ex
      return
  110 bi = ex*s1/rtrx
      dbi = ex*rtrx*d1
      return
c
  120 continue
      if (c.gt.5.0e0) go to 150
      t = 0.4e0*c - 1.0e0
      tt = t + t
      j = n2
      f1 = bjp(j)
      e1 = bjn(j)
      f2 = 0.0e0
      e2 = 0.0e0
      do 130 i=1,m2
        j = j - 1
        temp1 = f1
        temp2 = e1
        f1 = tt*f1 - f2 + bjp(j)
        e1 = tt*e1 - e2 + bjn(j)
        f2 = temp1
        e2 = temp2
  130 continue
      bi = (t*e1-e2+bjn(1)) - ax*(t*f1-f2+bjp(1))
      j = n3d
      f1 = dbjp(j)
      e1 = dbjn(j)
      f2 = 0.0e0
      e2 = 0.0e0
      do 140 i=1,m3d
        j = j - 1
        temp1 = f1
        temp2 = e1
        f1 = tt*f1 - f2 + dbjp(j)
        e1 = tt*e1 - e2 + dbjn(j)
        f2 = temp1
        e2 = temp2
  140 continue
      dbi = x*x*(t*f1-f2+dbjp(1)) + (t*e1-e2+dbjn(1))
      return
c
  150 continue
      rtrx = sqrt(rx)
      t = 10.0e0/c - 1.0e0
      tt = t + t
      j = n3
      f1 = aa(j)
      e1 = bb(j)
      f2 = 0.0e0
      e2 = 0.0e0
      do 160 i=1,m3
        j = j - 1
        temp1 = f1
        temp2 = e1
        f1 = tt*f1 - f2 + aa(j)
        e1 = tt*e1 - e2 + bb(j)
        f2 = temp1
        e2 = temp2
  160 continue
      temp1 = t*f1 - f2 + aa(1)
      temp2 = t*e1 - e2 + bb(1)
      cv = c - fpi12
      bi = (temp1*cos(cv)+temp2*sin(cv))/rtrx
      j = n4d
      f1 = daa(j)
      e1 = dbb(j)
      f2 = 0.0e0
      e2 = 0.0e0
      do 170 i=1,m4d
        j = j - 1
        temp1 = f1
        temp2 = e1
        f1 = tt*f1 - f2 + daa(j)
        e1 = tt*e1 - e2 + dbb(j)
        f2 = temp1
        e2 = temp2
  170 continue
      temp1 = t*f1 - f2 + daa(1)
      temp2 = t*e1 - e2 + dbb(1)
      cv = c - spi12
      dbi = (temp1*cos(cv)-temp2*sin(cv))*rtrx
      return
      end
