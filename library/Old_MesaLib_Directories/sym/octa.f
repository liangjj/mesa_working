*deck @(#)octa.f	5.1 11/6/94
      subroutine octa(t)
c***begin prologue     octa.f
c***date written       930711  
c***revision date      11/6/94      
c
c***keywords           
c***author             martin, r.l. (lanl) 
c***source             @(#)octa.f	5.1   11/6/94
c***purpose            generates the covering operations of octahedral group 
c***description
c     there are 24 operations which cover the octahedral group. these are
c     the identity, 8 c3 operations about cube body diagonals, 9 c4 
c     (6 c4 and 3 c4**2=3 c2) about x,y,and z, and 6 c2 operations about
c     axes parallel to the face diagonals.
c    
c
c***references
c     m. tinkham, "group theory and quantum mechanics", mcgraw-hill(1964).
c     see figure 4-5.
c
c***routines called
c
c***end prologue       octa.f
      implicit none
c     --- input variables -----
c     --- input arrays (unmodified) ---
c     --- input arrays (scratch) ---
c     --- output arrays ---
      real*8 t(3,3,24)
c     --- output variables ---
c     --- scratch arrays ---
c     --- local variables ---
      integer i,inp,iout
      real*8 alpha,gamma,beta,angle,pi
      real*8 tmp(3,3),tmp1(3,3)
      real*8 tmpx(3,3),tmpy(3,3),tmpz(3,3)
      real*8 asin,sqrt
c
      common/io/inp,iout
c
c     --- the identity ---
      call runit(t(1,1,1),3)
c
c     --- the 8 c3 axes. these correspond to +- 120 degree rotations about
c         each of the four cube body diagonals. first rotate to a new system
c         in which the z-axis lies along the body diagonal, then generate 
c         c3,c3**2 about them.
c         the body diagonals are found by 
c            rotate about z by pi/8.
c            rotate about x by + and - arcsin(sqrt(2/3))
c            rotate about y by + and - arcsin(sqrt(2/3))
c
      pi=4.0d+00*atan(1.0d+00)
      alpha=2.0d+00*pi/8.0d+00
      gamma=asin(sqrt(2.0d+00/3.0d+00))
      beta=2.0d+00*pi/3.0d+00
c
c     --- rotate axes to body diagonal.
      call rotz(tmpz,alpha)
      call rotx(tmpx,gamma)
      call ebc(tmp,tmpx,tmpz,3,3,3)
c     --- now do c3 about the new z-axis.
      call rotz(tmpz,beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
c     --- rotate back to original axes.
      call ebtc(t(1,1,2),tmp,tmp1,3,3,3)
c     --- the other c3
      call rotz(tmpz,-beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
      call ebtc(t(1,1,3),tmp,tmp1,3,3,3)
c
c     etc.
      call rotz(tmpz,alpha)
      call rotx(tmpx,-gamma)
      call ebc(tmp,tmpx,tmpz,3,3,3)
      call rotz(tmpz,beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
      call ebtc(t(1,1,4),tmp,tmp1,3,3,3)
      call rotz(tmpz,-beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
      call ebtc(t(1,1,5),tmp,tmp1,3,3,3)
c
      call rotz(tmpz,alpha)
      call roty(tmpy,gamma)
      call ebc(tmp,tmpy,tmpz,3,3,3)
      call rotz(tmpz,beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
      call ebtc(t(1,1,6),tmp,tmp1,3,3,3)
      call rotz(tmpz,-beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
      call ebtc(t(1,1,7),tmp,tmp1,3,3,3)
c
      call rotz(tmpz,alpha)
      call roty(tmpy,-gamma)
      call ebc(tmp,tmpy,tmpz,3,3,3)
      call rotz(tmpz,beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
      call ebtc(t(1,1,8),tmp,tmp1,3,3,3)
      call rotz(tmpz,-beta)
      call ebc(tmp1,tmpz,tmp,3,3,3)
      call ebtc(t(1,1,9),tmp,tmp1,3,3,3)

c
c     --- the 9 c4 operations about x,y,z
      alpha=2.0d+00*pi/4.0d+00
      do 10 i=1,3
         angle=float(i)*alpha
         call rotx(t(1,1,9+i),angle)
   10 continue
      do 20 i=1,3
         angle=float(i)*alpha
         call roty(t(1,1,12+i),angle)
   20 continue
      do 30 i=1,3
         angle=float(i)*alpha
         call rotz(t(1,1,15+i),angle)
   30 continue
c
c     --- finally, the 6 c2 axes about axes through the origin parallel
c         to the face diagonals. these are generated by rotating about x
c         by pi/8 to get to the face diagonal, and then generating c2 about
c         y and z, and the cyclic permutations.
      alpha=2.0d+00*pi/8.0d+00
      beta=2.0d+00*pi/2.0d+00
      call rotx(tmpx,alpha)
      call roty(tmpy,beta)
      call ebc(tmp,tmpy,tmpx,3,3,3)
      call ebtc(t(1,1,19),tmpx,tmp,3,3,3)
      call rotz(tmpz,beta)
      call ebc(tmp,tmpz,tmpx,3,3,3)
      call ebtc(t(1,1,20),tmpx,tmp,3,3,3)
c
      call roty(tmpy,alpha)
      call rotz(tmpz,beta)
      call ebc(tmp,tmpz,tmpy,3,3,3)
      call ebtc(t(1,1,21),tmpy,tmp,3,3,3)
      call rotx(tmpx,beta)
      call ebc(tmp,tmpx,tmpy,3,3,3)
      call ebtc(t(1,1,22),tmpy,tmp,3,3,3)
c
      call rotz(tmpz,alpha)
      call rotx(tmpx,beta)
      call ebc(tmp,tmpx,tmpz,3,3,3)
      call ebtc(t(1,1,23),tmpz,tmp,3,3,3)
      call roty(tmpy,beta)
      call ebc(tmp,tmpy,tmpz,3,3,3)
      call ebtc(t(1,1,24),tmpz,tmp,3,3,3)
c
c
      return
      end
      
