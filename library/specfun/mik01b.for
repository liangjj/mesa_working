        program mik01b
c
c       =============================================================
c       purpose: this program computes the modified bessel functions 
c                i0(x), i1(x), k0(x), k1(x), and their derivatives 
c                using subroutine ik01b
c       input :  x   --- argument ( x ò 0 )
c       output:  bi0 --- i0(x)
c                di0 --- i0'(x)
c                bi1 --- i1(x)
c                di1 --- i1'(x)
c                bk0 --- k0(x)
c                dk0 --- k0'(x)
c                bk1 --- k1(x)
c                dk1 --- k1'(x)
c       example:
c
c         x      i0(x)         i0'(x)        i1(x)         i1'(x)
c       -------------------------------------------------------------
c        1.0   .126607d+01   .565159d+00   .565159d+00   .700907d+00
c       10.0   .281572d+04   .267099d+04   .267099d+04   .254862d+04
c       20.0   .435583d+08   .424550d+08   .424550d+08   .414355d+08
c       30.0   .781672d+12   .768532d+12   .768532d+12   .756055d+12
c       40.0   .148948d+17   .147074d+17   .147074d+17   .145271d+17
c       50.0   .293255d+21   .290308d+21   .290308d+21   .287449d+21
c
c         x      k0(x)         k0'(x)        k1(x)         k1'(x)
c       -------------------------------------------------------------
c        1.0   .421024d+00  -.601907d+00   .601907d+00  -.102293d+01
c       10.0   .177801d-04  -.186488d-04   .186488d-04  -.196449d-04
c       20.0   .574124d-09  -.588306d-09   .588306d-09  -.603539d-09
c       30.0   .213248d-13  -.216773d-13   .216773d-13  -.220474d-13
c       40.0   .839286d-18  -.849713d-18   .849713d-18  -.860529d-18
c       50.0   .341017d-22  -.344410d-22   .344410d-22  -.347905d-22
c       =============================================================
c
        implicit double precision (a-h,o-z)
        write(*,*)'please enter x '
        read(*,*)x
        write(*,10)x
        write(*,*)'  x       i0(x)          i0''(x)         i1(x)',
     &            '          i1''(x)'
        write(*,*)'-------------------------------------------',
     &            '----------------------'
        call ik01b(x,bi0,di0,bi1,di1,bk0,dk0,bk1,dk1)
        write(*,20)x,bi0,di0,bi1,di1
        write(*,*)
        write(*,*)'  x       k0(x)          k0''(x)         k1(x)',
     &            '          k1''(x)'
        write(*,*)'-------------------------------------------',
     &            '----------------------'
        write(*,20)x,bk0,dk0,bk1,dk1
10      format(3x 'x =',f5.1)
20      format(1x,f4.1,4d15.7)
        end


        subroutine ik01b(x,bi0,di0,bi1,di1,bk0,dk0,bk1,dk1)
c
c       =========================================================
c       purpose: compute modified bessel functions i0(x), i1(1),
c                k0(x) and k1(x), and their derivatives
c       input :  x   --- argument ( x ò 0 )
c       output:  bi0 --- i0(x)
c                di0 --- i0'(x)
c                bi1 --- i1(x)
c                di1 --- i1'(x)
c                bk0 --- k0(x)
c                dk0 --- k0'(x)
c                bk1 --- k1(x)
c                dk1 --- k1'(x)
c       =========================================================
c
        implicit double precision (a-h,o-z)
        if (x.eq.0.0d0) then
           bi0=1.0d0
           bi1=0.0d0
           bk0=1.0d+300
           bk1=1.0d+300
           di0=0.0d0
           di1=0.5d0
           dk0=-1.0d+300
           dk1=-1.0d+300
           return
        else if (x.le.3.75d0) then
           t=x/3.75d0
           t2=t*t
           bi0=(((((.0045813d0*t2+.0360768d0)*t2+.2659732d0)
     &         *t2+1.2067492d0)*t2+3.0899424d0)*t2
     &         +3.5156229d0)*t2+1.0d0
           bi1=x*((((((.00032411d0*t2+.00301532d0)*t2
     &         +.02658733d0)*t2+.15084934d0)*t2+.51498869d0)
     &         *t2+.87890594d0)*t2+.5d0)
        else
           t=3.75d0/x
           bi0=((((((((.00392377d0*t-.01647633d0)*t
     &         +.02635537d0)*t-.02057706d0)*t+.916281d-2)*t
     &         -.157565d-2)*t+.225319d-2)*t+.01328592d0)*t
     &         +.39894228d0)*dexp(x)/dsqrt(x)
           bi1=((((((((-.420059d-2*t+.01787654d0)*t
     &         -.02895312d0)*t+.02282967d0)*t-.01031555d0)*t
     &         +.163801d-2)*t-.00362018d0)*t-.03988024d0)*t
     &         +.39894228d0)*dexp(x)/dsqrt(x)
        endif
        if (x.le.2.0d0) then
           t=x/2.0d0
           t2=t*t
           bk0=(((((.0000074d0*t2+.0001075d0)*t2+.00262698d0)
     &         *t2+.0348859d0)*t2+.23069756d0)*t2+.4227842d0)
     &         *t2-.57721566d0-bi0*dlog(t)
           bk1=((((((-.00004686d0*t2-.00110404d0)*t2
     &         -.01919402d0)*t2-.18156897d0)*t2-.67278579d0)
     &         *t2+.15443144d0)*t2+1.0d0)/x+bi1*dlog(t)
        else
           t=2.0d0/x
           t2=t*t
           bk0=((((((.00053208d0*t-.0025154d0)*t+.00587872d0)
     &         *t-.01062446d0)*t+.02189568d0)*t-.07832358d0)
     &         *t+1.25331414d0)*dexp(-x)/dsqrt(x)
           bk1=((((((-.00068245d0*t+.00325614d0)*t
     &         -.00780353d0)*t+.01504268d0)*t-.0365562d0)*t+
     &         .23498619d0)*t+1.25331414d0)*dexp(-x)/dsqrt(x)
        endif
        di0=bi1
        di1=bi0-bi1/x
        dk0=-bk1
        dk1=-bk0-bk1/x
        return
        end
