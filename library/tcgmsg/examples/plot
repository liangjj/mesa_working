%!PS-Adobe-2.0 EPSF-2.0
%%Title: Molden
%%For: Schaft
%%Creator: Drs G Schaftenaar
%%DocumentFonts: Courier
%%Pages (atend)
%%BoundingBox: 0 0 612 792
%%EndComments
%
%###### User Preferences ############
%
%---- SIZE AND ORIENTATION OF THE PLOT ---
%
/size    {  0.24 } def
%---- These number can be negative -------
/originx {  39.0 } def
/originy { 753.0 } def
/angle   { -90.0 } def
%For Portrait use
%/originx { 40.0 } def
%/originy { 240.0 } def
%/angle   { 0.0 } def
%and BoundingBox: 25 255 535 765
%
%---- COLORS FOR DENSITY CONTOURS  -------
%
/poscontour { 18 } def
/negcontour { 19 } def
%---- FILL COLORS OF DENSITY SPACE MODE  -
/posfill { 16 } def
/negfill { 17 } def
%
%---- COLORS HAVE A HUE AND SATURATION ---
%
/hues {[.0 .0 .1 .33 .66 .5 .12 .54 .0 .83 .33 .1 .08 .15 .07 .0 .33 .1 .66 .0]} def
/satus {[.0 .93 .96 1. .5 1. 1. .38 .0 1. .9 .41 1. .6 .95 .0 .5 .7 1. 1.]} def
%
%---- SET BOND RENDERING:  ---------------
%---- shadedrod, whiterod, blackrod  -----
%
/dorod { shadedrod } def
%
%---- Include Tabel & Logo, Fontsize -----
/tabel {true} def
/titleandlogo {true} def
/fontwidth {27} def
/fontheight {35} def
%
%###### END User Preferences ########
/hue {hues col get} def
/satu {satus col get} def
/setcol {/col exch def hue satu 1.0 sethsbcolor} def
/m { moveto } def
/l { lineto } def
/s { stroke } def
/n { newpath } def
/lc { setlinecap } def
/offset { 0 0 moveto (A) false charpath
flattenpath pathbbox
pop pop pop -1 mul /xoff exch def } def
/doatom
{ gsave
  rx ry translate
  90 -1 1
  { gsave
    dup cos setgray sin dup scale
    newpath
    0 0 rad 0 360 arc
    closepath fill grestore } for
    grestore } def
/shadedrod
{ gsave
  x1 y1 translate
  x2 x1 neg add
  y2 y1 neg add
  {atan neg rotate} stopped not {
  87 -3 0
  {dup
  gsave
  newpath
   cos 1.0 cosb 0.5 mul neg add mul setgray
   sin 1.0 scale
   1 cosb scale
   0 0 hd 0 180 arcn
   x2 x1 neg add dup mul
   y2 y1 neg add dup mul
   add sqrt
  0 cosb eq {/cosb 1.0 def} if 0 exch cosb div translate
   0 0 hd 180 360 arc
  closepath fill
  grestore } for
  } if
  grestore } def
/blackrod
{ gsave
  x1 y1 translate
  x2 x1 neg add
  y2 y1 neg add
  {atan neg rotate} stopped not {
  newpath
   0 setgray
   1 cosb scale
   0 0 hd 0 180 arcn
   x2 x1 neg add dup mul
   y2 y1 neg add dup mul
   add sqrt
  0 cosb eq {/cosb 1.0 def} if 0 exch cosb div translate
   0 0 hd 180 360 arc
  closepath stroke
  } if
  grestore } def
/whiterod
{ gsave
  x1 y1 translate
  x2 x1 neg add
  y2 y1 neg add
  {atan neg rotate} stopped not {
  newpath
   1 setgray
   1 cosb scale
   0 0 hd 0 180 arcn
   x2 x1 neg add dup mul
   y2 y1 neg add dup mul
   add sqrt
  0 cosb eq {/cosb 1.0 def} if 0 exch cosb div translate
   0 0 hd 180 360 arc
  closepath stroke
  } if
  grestore } def
/dobond
{ gsave
  0 setlinecap
  newpath moveto lineto
  90 -5 5
  { gsave dup cos hue exch satu exch sethsbcolor
    sin 23 mul setlinewidth
    stroke grestore } for
  grestore } def
/dobond2
{ gsave
  1 setlinecap
  2 setlinejoin
  newpath moveto lineto lineto
  90 -5 5
  { gsave dup cos hue exch satu exch sethsbcolor
    sin 23 mul setlinewidth
    stroke grestore } for
  grestore } def
/dobg
{ gsave
  setgray
  newpath
  0 0 m 2000 0 l 2000 2000 l 0 2000 l
  closepath fill
  grestore } def
/Helvetica-Bold findfont [ fontwidth   0   0  fontheight   0   0] makefont setfont
originx originy translate
angle rotate
   3 setlinewidth
2 setlinecap
size size scale
%%EndProlog
%%Page: ? 1
n
