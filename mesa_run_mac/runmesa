
ulimit
#
#    	script for running the mesa links.
#       the first line of the script is deliberately left blank in order
#       to invoke the Bourne shell.
# 	%W%   %G%
#
#
#       set up the default file names.
inp='mesa.inp'
out='mesa.out'
dat='../mesa.dat'
chk='mesa.chk'
int='tmp/mesa.int'
rwf='tmp/mesa.rwf'
siz='100000000'
rint='tmp/mesa.rint'
tint='tmp/mesa.tint'
gint='tmp/mesa.gint'
rdint='tmp/mesa.rdint'
dint='tmp/mesa.dint'
zint='tmp/mesa.zint'
ham='tmp/mesa.ham'
moden='tmp/mesa.moden'
aoden='tmp/mesa.aoden'
saoden='tmp/mesa/soden'
gden='tmp/mesa.gden'
fci='tmp/mesa/fci'
#
kohn='tmp/mesa.kohn'
kohndt='tmp/mesa.kohndt'
grid='tmp/mesa.grid'
orbs='tmp/mesa.orbs'
vstat='tmp/mesa.vstat'
ylms='tmp/mesa.ylms'
bessel='tmp/mesa.bessel'
knints='tmp/mesa.knints'
tmat='tmp/mesa.tmat'
blktmt='tmp/mesa.blktmt'
optmat='tmp/mesa.optint'
atomci='tmp/mesa.atomci'
fedvr='tmp/mesa.fedvr'
bec='tmp/mesa.bec'
hconfig='tmp/mesa.hconfig'
rmtrx='tmp/mesa.rmtrx'
tdse='tmp/mesa.tdse'
#
#       set up the default initial and terminal links.
start='m0'
stop='m998'
#
#       check to see if any of the files have been replaced on the
#       command line.
for file in $*
do
   case $file in
      inp=*) 
        inp=`expr $file : 'inp=\(.*\)'` ;;
      out=*) 
        out=`expr $file : 'out=\(.*\)'` ;;
      chk=*) 
        chk=`expr $file : 'chk=\(.*\)'` ;;
      dat=*) 
        dat=`expr $file : 'dat=\(.*\)'` ;;
      rwf=*) 
        rwf=`expr $file : 'rwf=\(.*\)'` ;;
      int=*) 
        int=`expr $file : 'int=\(.*\)'` ;;
      siz=*) 
        siz=`expr $file : 'siz=\(.*\)'` ;;
      start=*) 
        start=`expr $file : 'start=\(.*\)'` ;;
      stop=*) 
        stop=`expr $file : 'stop=\(.*\)'` ;;
   esac
done
#
#       run the links. 
next=$start
#
#       run until the next message is not a link number 
until echo $next | egrep -v 'm[0-9]+'
do
#       is this the terminal link?
        if echo $next | egrep $stop
        then
                break
        fi
#
        echo $next inp=$inp out=$out chk=$chk rwf=$rwf int=$int siz=$siz 
        next=`time $next inp=$inp out=$out chk=$chk rwf=$rwf int=$int siz=$siz`
done
#
#       we have finished.  
